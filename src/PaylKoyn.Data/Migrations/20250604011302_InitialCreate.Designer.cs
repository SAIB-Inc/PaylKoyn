// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PaylKoyn.Data.Models;

#nullable disable

namespace PaylKoyn.Data.Migrations
{
    [DbContext(typeof(PaylKoynDbContext))]
    [Migration("20250604011302_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Argus.Sync.Data.Models.ReducerState", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LatestIntersectionsJson")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("StartIntersectionJson")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.ToTable("ReducerStates");
                });

            modelBuilder.Entity("PaylKoyn.Data.Models.Entity.OutputBySlot", b =>
                {
                    b.Property<string>("OutRef")
                        .HasColumnType("text");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BlockHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("Raw")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("ScriptDataHash")
                        .HasColumnType("text");

                    b.Property<string>("ScriptHash")
                        .HasColumnType("text");

                    b.Property<decimal>("Slot")
                        .HasColumnType("numeric(20,0)");

                    b.Property<decimal?>("SpentSlot")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("SpentTxHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("OutRef");

                    b.ToTable("OutputsBySlot");
                });

            modelBuilder.Entity("PaylKoyn.Data.Models.Entity.TransactionBySlot", b =>
                {
                    b.Property<string>("Hash")
                        .HasColumnType("text");

                    b.Property<byte[]>("Body")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("Metadata")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<decimal>("Slot")
                        .HasColumnType("numeric(20,0)");

                    b.HasKey("Hash");

                    b.ToTable("TransactionsBySlot");
                });
#pragma warning restore 612, 618
        }
    }
}
